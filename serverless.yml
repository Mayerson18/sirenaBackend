service: aws-node-rest-api-typescript

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    NODE_ENV: dev

plugins:
  - serverless-plugin-typescript 
  - serverless-offline

package:
  exclude:
    - config/.env.stg
    - config/.env.pro
  include:
    - config/.env.dev

functions:
  create:
    handler: app/handler.create
    events:
      - http:
          path: users
          method: post
  update:
    handler: app/handler.update
    events:
      - http:
          path: users/{id}
          method: put
  find:
    handler: app/handler.find
    events:
      - http:
          path: users
          method: get
  findOne:
    handler: app/handler.findOne
    events:
      - http:
          path: users/{id}
          method: get
  deleteOne:
    handler: app/handler.deleteOne
    events:
      - http:
          path: users/{id}
          method: delete
  findMails:
    handler: app/handler.findMails
    events:
      - http:
          path: mails
          method: get
  filterMailsByMessageOrSubject:
    handler: app/handler.filterMailsByMessageOrSubject
    events:
      - http:
          path: mails/filter/{filter}
          method: get
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
# resources:
#   Resources:
#     CognitoUserPool:
#       Type: "AWS::Cognito::UserPool"
#       Properties:
#         MfaConfiguration: OFF
#         UserPoolName: sirena
#         UsernameAttributes:
#           - email
#         Policies:
#           PasswordPolicy:
#             MinimumLength: 6
#             RequireLowercase: False
#             RequireNumbers: False
#             RequireSymbols: False
#             RequireUppercase: False
#     CognitoUserPoolClient:
#       Type: "AWS::Cognito::UserPoolClient"
#       Properties:
#         ClientName: sirena
#         GenerateSecret: False
#         UserPoolId:
#           Ref: CognitoUserPool
#     ApiGatewayAuthorizer:
#       DependsOn:
#         - ApiGatewayRestApi
#       Type: AWS::ApiGateway::Authorizer
#       Properties:
#         Name: cognito-authorizer
#         IdentitySource: method.request.header.Authorization
#         RestApiId:
#           Ref: ApiGatewayRestApi
#         Type: COGNITO_USER_POOLS
#         ProviderARNs:
#           - Fn::GetAtt: [CognitoUserPool, Arn]
#   Outputs:
#     CognitoUserPoolArn:
#       Value:
#         Fn::GetAtt:
#           - CognitoUserPool
#           - Arn
      # Export:
      #   Name: CognitoUserPoolArn-${self:custom.currentStage}